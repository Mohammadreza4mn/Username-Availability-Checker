{"version":3,"sources":["context/Generate-context.js","components/Availability.js","components/Result.js","components/Normal.js","components/CalendarPicker.js","components/Professional.js","App.js","serviceWorker.js","index.js"],"names":["GenerateContext","React","createContext","resultUserName","actionDisplay","Availability","props","sites","usable","useState","Array","from","length","className","response","setResponse","useEffect","axios","all","map","item","get","then","spread","res","forEach","index","data","possible","catch","error","message","finally","key","Result","getUserName","useContext","target","href","style","width","src","process","scope","colspan","onClick","Normal","userName","setUserName","display","setDisplay","useReducer","state","action","status","firstName","value","lastName","infoUser","setInfoUser","Provider","type","placeholder","onChange","event","required","autoFocus","arrayUserName","push","charAt","CalendarPicker","setDateBirth","selectedDay","setSelectedDay","date","inputPlaceholder","shouldHighlightWeekends","locale","renderInput","ref","year","month","day","wrapperClassName","calendarPopperPosition","Professional","dateBirth","App","alert","setAlert","success","country","e","console","log","role","dir","data-dismiss","aria-label","aria-hidden","to","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","origin","addEventListener","fetch","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ddb72a57.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst GenerateContext = React.createContext({ resultUserName: [], actionDisplay: () => { } })\r\n\r\nexport default GenerateContext;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Availability = (props) => {\r\n    const sites = ['gitlab', 'github', 'instagram', 'pinterest', 'twitter']\r\n    let usable = [];\r\n\r\n    const [response, setResponse] = useState(Array.from({ length: sites.length }, () => <span className=\"spinner-border\" />));\r\n\r\n    useEffect(\r\n        () => {\r\n            axios.all(sites.map((item) => axios.get(`https://username-availability.herokuapp.com/check/${item}/${props.resultUserName}`)))\r\n                .then(\r\n                    axios.spread((...res) => {\r\n                        res.forEach(({ data }, index) => {\r\n                            if (data.possible === true) {\r\n                                usable[index] = sites[index]\r\n                            } else {\r\n                                usable[index] = \"--\"\r\n                            }\r\n\r\n                        })\r\n                    })\r\n                )\r\n                .catch(error => {\r\n                    usable = Array.from({ length: sites.length }, () => error.message)\r\n                })\r\n                .finally(() =>\r\n                    setResponse(usable)\r\n                )\r\n        }, []\r\n    )\r\n\r\n    return (\r\n        <tr>\r\n            <td>{props.resultUserName}</td>\r\n            {response.map((item, index) =>\r\n                <td key={index}>{item}</td>\r\n            )}\r\n        </tr>\r\n    )\r\n}\r\n\r\n\r\nexport default Availability;","import React, { useContext } from 'react';\r\nimport GenerateContext from '../context/Generate-context';\r\nimport Availability from './Availability';\r\n\r\nconst Result = (props) => {\r\n\r\n    const getUserName = useContext(GenerateContext);\r\n\r\n    return (\r\n        <div className=\"col-md-10\">\r\n            <table className=\"table table-dark text-center table-hover rounded\">\r\n                <caption>\r\n                    <a className=\"badge badge-light\" target=\"_blank\"  href=\"http://github.com/mohammadreza4mn\">\r\n                        <img style={{ width: \"50px\" }} src={`${process.env.PUBLIC_URL}/assets/img/m.m.jpg`} />\r\n                    </a>\r\n                </caption>\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">نام کاربری پیشنهادی</th>\r\n                        <th scope=\"col\" colspan=\"5\">وبسایت های قابل ثبت نام</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {getUserName.resultUserName.map((item, index) =>\r\n                        <Availability resultUserName={item} key={index} />\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n            <button className=\"btn btn-dark border btn-block\" onClick={getUserName.actionDisplay}>مرحله قبل</button>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Result;","import React, { useState, useReducer } from 'react';\r\nimport GenerateContext from '../context/Generate-context';\r\nimport Result from './Result';\r\n\r\nconst Normal = (props) => {\r\n\r\n    const [userName, setUserName] = useState([]);\r\n    const [display, setDisplay] = useState('col-md-5');\r\n\r\n    const redSetInfoUser = (state, action) => {\r\n        switch (action.status) {\r\n            case \"setFirstName\":\r\n                return { ...state, firstName: action.value }\r\n            case \"setLastName\":\r\n                return { ...state, lastName: action.value }\r\n            default:\r\n                return state\r\n        }\r\n    }\r\n    const [infoUser, setInfoUser] = useReducer(redSetInfoUser, {})\r\n\r\n    const inputFirstName = (event) => {\r\n        setInfoUser({ status: \"setFirstName\", value: event.target.value })\r\n    }\r\n    const inputLastName = (event) => {\r\n        setInfoUser({ status: \"setLastName\", value: event.target.value })\r\n    }\r\n\r\n    const generate = () => {\r\n        if (infoUser.firstName && infoUser.lastName) {\r\n            const arrayUserName = [];\r\n            arrayUserName.push(`${infoUser.firstName.charAt(0) +\r\n                infoUser.firstName.charAt(infoUser.firstName.length - 1)}_${infoUser.lastName.charAt(0) +\r\n                infoUser.lastName.charAt(infoUser.lastName.length - 1)}`)\r\n            arrayUserName.push(`${infoUser.firstName}_${infoUser.lastName.charAt(0) +\r\n                infoUser.lastName.charAt(infoUser.lastName.length - 1)}`)\r\n            arrayUserName.push(`${infoUser.firstName.charAt(0) +\r\n                infoUser.firstName.charAt(infoUser.firstName.length - 1)}_${infoUser.lastName}`)\r\n            arrayUserName.push(`${infoUser.firstName}_${infoUser.lastName}`)\r\n            setUserName(arrayUserName)\r\n            setDisplay('d-none')\r\n        }\r\n    }\r\n\r\n    const hide_show = () => {\r\n        setDisplay('col-md-5')\r\n    }\r\n\r\n    return (\r\n        <GenerateContext.Provider value={{\r\n            resultUserName: userName,\r\n            actionDisplay: hide_show\r\n        }}>\r\n            <div className={display}>\r\n                <input type=\"text\" className=\"form-control text-center mb-2\" placeholder=\"نام\"\r\n                    onChange={inputFirstName} required autoFocus />\r\n                <input type=\"text\" className=\"form-control text-center my-2\" placeholder=\"نام خانوادگی\"\r\n                    onChange={inputLastName} required />\r\n                <button className=\"btn btn-dark border btn-block\" onClick={generate} >ساختن نام کاربری</button>\r\n            </div>\r\n            {display == 'd-none' ? <Result /> : null}\r\n        </GenerateContext.Provider>\r\n    )\r\n}\r\n\r\nexport default Normal;","import React, { useState } from \"react\";\r\nimport \"react-modern-calendar-datepicker/lib/DatePicker.css\";\r\nimport DatePicker from \"react-modern-calendar-datepicker\";\r\n\r\nconst CalendarPicker = ({ setDateBirth }) => {\r\n\r\n  const [selectedDay, setSelectedDay] = useState();\r\n\r\n  const renderCustomInput = ({ ref }) => (\r\n    <input type=\"text\" className=\"form-control text-center my-2\"\r\n      placeholder=\"تاریخ تولد\" ref={ref}\r\n      value={selectedDay ? `${selectedDay.year}/${selectedDay.month}/${selectedDay.day}` : null} />\r\n  )\r\n\r\n  return (\r\n    <DatePicker\r\n      value={selectedDay}\r\n      onChange={(date) => { setSelectedDay(date); setDateBirth(date) }}\r\n      inputPlaceholder=\"Select a day\"\r\n      shouldHighlightWeekends\r\n      locale=\"fa\"\r\n      renderInput={renderCustomInput}\r\n      wrapperClassName=\"d-block\"\r\n      calendarPopperPosition=\"bottom\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default CalendarPicker;","import React, { useState, useReducer } from 'react';\r\nimport GenerateContext from '../context/Generate-context';\r\nimport Result from './Result';\r\nimport CalendarPicker from './CalendarPicker';\r\n\r\nconst Professional = (props) => {\r\n\r\n    const [userName, setUserName] = useState([]);\r\n    const [display, setDisplay] = useState('col-md-5');\r\n    const [dateBirth, setDateBirth] = useState(\"\");\r\n\r\n    const redSetInfoUser = (state, action) => {\r\n        switch (action.status) {\r\n            case \"setFirstName\":\r\n                return { ...state, firstName: action.value }\r\n            case \"setLastName\":\r\n                return { ...state, lastName: action.value }\r\n            default:\r\n                return state\r\n        }\r\n    }\r\n    const [infoUser, setInfoUser] = useReducer(redSetInfoUser, {})\r\n\r\n    const inputFirstName = (event) => {\r\n        setInfoUser({ status: \"setFirstName\", value: event.target.value })\r\n    }\r\n    const inputLastName = (event) => {\r\n        setInfoUser({ status: \"setLastName\", value: event.target.value })\r\n    }\r\n\r\n    const generate = () => {\r\n        if (infoUser.firstName && infoUser.lastName && dateBirth) {\r\n            const arrayUserName = [];\r\n            arrayUserName.push(`${infoUser.firstName}_${dateBirth.year}`)\r\n            arrayUserName.push(`${infoUser.firstName}_${dateBirth.year}_${infoUser.lastName.charAt(0) +\r\n                infoUser.lastName.charAt(infoUser.lastName.length - 1)}`)\r\n            arrayUserName.push(`${dateBirth.year}_${infoUser.lastName.charAt(0) +\r\n                infoUser.lastName.charAt(infoUser.lastName.length - 1)}`)\r\n            arrayUserName.push(`${infoUser.firstName}_${infoUser.lastName}_${dateBirth.year + dateBirth.month + dateBirth.day}`)\r\n            setUserName(arrayUserName)\r\n            setDisplay('d-none')\r\n        }\r\n    }\r\n\r\n    const hide_show = () => {\r\n        setDisplay('col-md-5')\r\n    }\r\n\r\n    return (\r\n\r\n        <GenerateContext.Provider value={{\r\n            resultUserName: userName,\r\n            actionDisplay: hide_show\r\n        }}>\r\n            <div className={display}>\r\n                <input type=\"text\" className=\"form-control text-center mb-2\" placeholder=\"نام\"\r\n                    onChange={inputFirstName} required autoFocus />\r\n                <input type=\"text\" className=\"form-control text-center my-2\" placeholder=\"نام خانوادگی\"\r\n                    onChange={inputLastName} required />\r\n                <CalendarPicker setDateBirth={setDateBirth} />\r\n                <button className=\"btn btn-dark border btn-block\" onClick={generate} >ساختن نام کاربری</button>\r\n            </div>\r\n            {display == 'd-none' ? <Result /> : null}\r\n        </GenerateContext.Provider>\r\n    )\r\n}\r\n\r\nexport default Professional;","import React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport Normal from './components/Normal';\r\nimport Professional from './components/Professional';\r\nimport axios from \"axios\";\r\n\r\nconst App = (props) => {\r\n\r\n    const [alert, setAlert] = useState(false)\r\n\r\n    useEffect(() => {\r\n        axios.get('https://ipwhois.app/json/?objects=country,success,message')\r\n            .then(({ data }) => {\r\n                if (data.success == true && data.country == \"Iran\") {\r\n                    setAlert(true)\r\n                }\r\n            })\r\n            .catch(e => console.log(e.message))\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container vh-100 d-flex align-items-center justify-content-center\">\r\n            <div className=\"form-group row w-100 justify-content-center\">\r\n                {alert &&\r\n                    <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n                        <div className='flex text-right' dir='rtl'>فیلتر شکن شما خاموش است، در این برنامه از api استفاده شده است که ایران را تحریم کرده است، لطفا IP خود را به خارج ایران تغییر دهید</div>\r\n                        <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>}\r\n                <Router>\r\n                    <div className=\"btn-group-vertical order-sm-1 m-5 m-md-0\">\r\n                        <Link to=\"/\">\r\n                            <button className=\"btn btn-dark border\">روش معمولی</button>\r\n                        </Link>\r\n                        <Link to=\"/professional\">\r\n                            <button className=\"btn btn-dark border\">روش حرفه‌ای</button>\r\n                        </Link>\r\n                    </div>\r\n                    <Route exact path=\"/\" component={Normal} />\r\n                    <Route exact path=\"/professional\" component={Professional} />\r\n                </Router>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n  //if (process.env.NODE_ENV === 'development' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}