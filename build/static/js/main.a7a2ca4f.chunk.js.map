{"version":3,"sources":["components/CalendarPicker.js","context/Generate-context.js","components/Availability.js","components/Result.js","components/Normal.js","components/Professional.js","App.js","serviceWorker.js","index.js"],"names":["dateBirth","GenerateContext","React","createContext","resultUserName","actionDisplay","Availability","props","useState","response","setResponse","usable","useEffect","map","item","index","axios","get","then","res","data","possible","push","catch","error","console","log","timer","setInterval","last","setTimeout","clearInterval","key","Result","getUserName","useContext","className","href","style","width","src","process","scope","colspan","onClick","Normal","userName","setUserName","display","setDisplay","useReducer","state","action","status","firstName","value","lastName","infoUser","setInfoUser","Provider","type","placeholder","onChange","event","target","required","autoFocus","arrayUserName","charAt","length","CalendarPicker","selectedDay","setSelectedDay","inputPlaceholder","shouldHighlightWeekends","locale","renderInput","ref","year","month","day","wrapperClassName","calendarPopperPosition","Professional","App","to","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","origin","addEventListener","fetch","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a7a2ca4f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"react-modern-calendar-datepicker/lib/DatePicker.css\";\r\nimport DatePicker from \"react-modern-calendar-datepicker\";\r\nexport let dateBirth;\r\n\r\nconst CalendarPicker = () => {\r\n\r\n  const [selectedDay, setSelectedDay] = useState();\r\n\r\n  dateBirth = selectedDay;\r\n\r\n  const renderCustomInput = ({ ref }) => (\r\n    <input type=\"text\" className=\"form-control text-center my-2\"\r\n      placeholder=\"تاریخ تولد\" ref={ref}\r\n      value={selectedDay ? `${selectedDay.year}/${selectedDay.month}/${selectedDay.day}` : null} />\r\n  )\r\n\r\n  return (\r\n    <DatePicker\r\n      value={selectedDay}\r\n      onChange={setSelectedDay}\r\n      inputPlaceholder=\"Select a day\"\r\n      shouldHighlightWeekends\r\n      locale=\"fa\"\r\n      renderInput={renderCustomInput}\r\n      wrapperClassName=\"d-block\"\r\n      calendarPopperPosition=\"bottom\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default CalendarPicker;","import React from 'react';\r\n\r\nconst GenerateContext = React.createContext({ resultUserName: [], actionDisplay: () => { } })\r\n\r\nexport default GenerateContext;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Availability = (props) => {\r\n\r\n    const [response, setResponse] = useState([15]);\r\n    const usable = [];\r\n\r\n    useEffect(\r\n        () => {\r\n            const sites = ['gitlab', 'github', 'instagram', 'pinterest', 'twitter']\r\n            sites.map((item, index) => {\r\n                axios.get(`https://username-availability.herokuapp.com/check/${item}/${props.resultUserName}`)\r\n                    .then(res => {\r\n                        if (res.data.possible === true) {\r\n                            usable.push(item)\r\n                        } else {\r\n                            usable.push(\"\")\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error)\r\n                    })\r\n            }\r\n            )\r\n\r\n            const timer = setInterval(() => {\r\n                setResponse((last) => [last - 1])\r\n            }, 1000)\r\n\r\n            setTimeout(() => {\r\n                clearInterval(timer)\r\n                setResponse(usable)\r\n            }, 15000)\r\n\r\n        }, []\r\n    )\r\n\r\n    return (\r\n        <tr>\r\n            <td>{props.resultUserName}</td>\r\n            {response.map((item, index) =>\r\n                <td key={index}>{item}</td>\r\n            )}\r\n        </tr>\r\n    )\r\n}\r\n\r\n\r\nexport default Availability;","import React, { useContext } from 'react';\r\nimport GenerateContext from '../context/Generate-context';\r\nimport Availability from './Availability';\r\n\r\nconst Result = (props) => {\r\n\r\n    const getUserName = useContext(GenerateContext);\r\n\r\n    return (\r\n        <div className=\"col-md-10\">\r\n            <table className=\"table table-dark text-center table-hover rounded\">\r\n                <caption>\r\n                    <a className=\"badge badge-light\" href=\"http://github.com/mohammadreza4mn\">\r\n                        <img style={{ width: \"50px\" }} src={`${process.env.PUBLIC_URL}/assets/img/m.m.jpg`} />\r\n                    </a>\r\n                </caption>\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">نام کاربری پیشنهادی</th>\r\n                        <th scope=\"col\" colspan=\"5\">وبسایت های قابل ثبت نام</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {getUserName.resultUserName.map((item, index) =>\r\n                        <Availability resultUserName={item} key={index} />\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n            <button className=\"btn btn-dark border btn-block\" onClick={getUserName.actionDisplay}>مرحله قبل</button>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Result;","import React, { useState, useReducer } from 'react';\r\nimport GenerateContext from '../context/Generate-context';\r\nimport Result from './Result';\r\n\r\nconst Normal = (props) => {\r\n\r\n    const [userName, setUserName] = useState([]);\r\n    const [display, setDisplay] = useState('col-md-5');\r\n\r\n    const redSetInfoUser = (state, action) => {\r\n        switch (action.status) {\r\n            case \"setFirstName\":\r\n                return { ...state, firstName: action.value }\r\n            case \"setLastName\":\r\n                return { ...state, lastName: action.value }\r\n            default:\r\n                return state\r\n        }\r\n    }\r\n    const [infoUser, setInfoUser] = useReducer(redSetInfoUser, {})\r\n\r\n    const inputFirstName = (event) => {\r\n        setInfoUser({ status: \"setFirstName\", value: event.target.value })\r\n    }\r\n    const inputLastName = (event) => {\r\n        setInfoUser({ status: \"setLastName\", value: event.target.value })\r\n    }\r\n\r\n    const generate = () => {\r\n        if (infoUser.firstName && infoUser.lastName) {\r\n            const arrayUserName = [];\r\n            arrayUserName.push(`${infoUser.firstName.charAt(0) +\r\n                infoUser.firstName.charAt(infoUser.firstName.length - 1)}_${infoUser.lastName.charAt(0) +\r\n                infoUser.lastName.charAt(infoUser.lastName.length - 1)}`)\r\n            arrayUserName.push(`${infoUser.firstName}_${infoUser.lastName.charAt(0) +\r\n                infoUser.lastName.charAt(infoUser.lastName.length - 1)}`)\r\n            arrayUserName.push(`${infoUser.firstName.charAt(0) +\r\n                infoUser.firstName.charAt(infoUser.firstName.length - 1)}_${infoUser.lastName}`)\r\n            arrayUserName.push(`${infoUser.firstName}_${infoUser.lastName}`)\r\n            setUserName(arrayUserName)\r\n            setDisplay('d-none')\r\n        }\r\n    }\r\n\r\n    const hide_show = () => {\r\n        setDisplay('col-md-5')\r\n    }\r\n\r\n    return (\r\n        <GenerateContext.Provider value={{\r\n            resultUserName: userName,\r\n            actionDisplay: hide_show\r\n        }}>\r\n            <div className={display}>\r\n                <input type=\"text\" className=\"form-control text-center mb-2\" placeholder=\"نام\"\r\n                    onChange={inputFirstName} required autoFocus />\r\n                <input type=\"text\" className=\"form-control text-center my-2\" placeholder=\"نام خانوادگی\"\r\n                    onChange={inputLastName} required />\r\n                <button className=\"btn btn-dark border btn-block\" onClick={generate} >ساختن نام کاربری</button>\r\n            </div>\r\n            {display == 'd-none' ? <Result /> : null}\r\n        </GenerateContext.Provider>\r\n    )\r\n}\r\n\r\nexport default Normal;","import React, { useState, useReducer } from 'react';\r\nimport GenerateContext from '../context/Generate-context';\r\nimport Result from './Result';\r\nimport CalendarPicker from './CalendarPicker';\r\nimport { dateBirth } from './CalendarPicker';\r\n\r\nconst Professional = (props) => {\r\n\r\n    const [userName, setUserName] = useState([]);\r\n    const [display, setDisplay] = useState('col-md-5');\r\n\r\n    const redSetInfoUser = (state, action) => {\r\n        switch (action.status) {\r\n            case \"setFirstName\":\r\n                return { ...state, firstName: action.value }\r\n            case \"setLastName\":\r\n                return { ...state, lastName: action.value }\r\n            default:\r\n                return state\r\n        }\r\n    }\r\n    const [infoUser, setInfoUser] = useReducer(redSetInfoUser, {})\r\n\r\n    const inputFirstName = (event) => {\r\n        setInfoUser({ status: \"setFirstName\", value: event.target.value })\r\n    }\r\n    const inputLastName = (event) => {\r\n        setInfoUser({ status: \"setLastName\", value: event.target.value })\r\n    }\r\n\r\n    const generate = () => {\r\n        if (infoUser.firstName && infoUser.lastName && dateBirth) {\r\n            const arrayUserName = [];\r\n            arrayUserName.push(`${infoUser.firstName}_${dateBirth.year}`)\r\n            arrayUserName.push(`${infoUser.firstName}_${dateBirth.year}_${infoUser.lastName.charAt(0) +\r\n                infoUser.lastName.charAt(infoUser.lastName.length - 1)}`)\r\n            arrayUserName.push(`${dateBirth.year}_${infoUser.lastName.charAt(0) +\r\n                infoUser.lastName.charAt(infoUser.lastName.length - 1)}`)\r\n            arrayUserName.push(`${infoUser.firstName}_${infoUser.lastName}_${dateBirth.year + dateBirth.month + dateBirth.day}`)\r\n            setUserName(arrayUserName)\r\n            setDisplay('d-none')\r\n        }\r\n    }\r\n\r\n    const hide_show = () => {\r\n        setDisplay('col-md-5')\r\n    }\r\n\r\n    return (\r\n\r\n        <GenerateContext.Provider value={{\r\n            resultUserName: userName,\r\n            actionDisplay: hide_show\r\n        }}>\r\n            <div className={display}>\r\n                <input type=\"text\" className=\"form-control text-center mb-2\" placeholder=\"نام\"\r\n                    onChange={inputFirstName} required autoFocus />\r\n                <input type=\"text\" className=\"form-control text-center my-2\" placeholder=\"نام خانوادگی\"\r\n                    onChange={inputLastName} required />\r\n                <CalendarPicker />\r\n                <button className=\"btn btn-dark border btn-block\" onClick={generate} >ساختن نام کاربری</button>\r\n            </div>\r\n            {display == 'd-none' ? <Result /> : null}\r\n        </GenerateContext.Provider>\r\n    )\r\n}\r\n\r\nexport default Professional;","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport Normal from './components/Normal';\r\nimport Professional from './components/Professional';\r\n\r\nconst App = (props) => {\r\n\r\n    return (\r\n        <div className=\"container vh-100 d-flex align-items-center justify-content-center\">\r\n            <div className=\"form-group row w-100 justify-content-center\">\r\n                <Router>\r\n                    <div className=\"btn-group-vertical order-sm-1 m-5 m-md-0\">\r\n                        <Link to=\"/\">\r\n                            <button className=\"btn btn-dark border\">روش معمولی</button>\r\n                        </Link>\r\n                        <Link to=\"/professional\">\r\n                            <button className=\"btn btn-dark border\">روش حرفه‌ای</button>\r\n                        </Link>\r\n                    </div>\r\n                    <Route exact path=\"/\" component={Normal} />\r\n                    <Route exact path=\"/professional\" component={Professional} />\r\n                </Router>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n  //if (process.env.NODE_ENV === 'development' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}